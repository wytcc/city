{"version":3,"sources":["webpack:///./static/js/src/timeline/timeline.js"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA,mBAAkB,YAAY;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0BAAyB,EAAE,eAAe,EAAE,EAAE,EAAE,EAAE,EAAE;AACpD,6BAA4B;AAC5B,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,aAAa;AAC9C,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,E","file":"timeline.js","sourcesContent":["var layerGroup;\r\nvar points = [];\r\nvar map;\r\n\r\nvar drawToMap = function(data){\r\n    layerGroup && layerGroup.clearLayers();\r\n    layerGroup = L.layerGroup();\r\n    data.forEach(function(d){\r\n        var temp = L.circle([d.lat, d.lng], d.radius * 10000, {\r\n            opacity: 1,\r\n            weight: 1,\r\n            fillOpacity: 0.4\r\n        });\r\n        layerGroup.addLayer(temp);\r\n    });\r\n    layerGroup.addTo(map);\r\n};\r\n\r\n$(document).ready(function(){\r\n    var number = 1000;\r\n    for(var i = 0; i < number; i++){\r\n        var temp = {\r\n            index: i,\r\n            radius: Math.random() * 20,\r\n            lat: 60 * Math.random(),\r\n            lng: -180 * Math.random() + 180,\r\n            time: parseInt(Math.random() * 10000000)\r\n        };\r\n        points.push(temp);\r\n    }\r\n\r\n    //��ʼ����ͼ\r\n    map = L.map('map').setView([0, 0], 2);\r\n    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\r\n        attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n    }).addTo(map);\r\n    drawToMap(points);\r\n\r\n    //��ʼ��ʱ����\r\n    var canvas = d3.select(\"#timeline svg\").append(\"g\");\r\n    var width = $(\"#timeline svg\").width();\r\n    var height = $(\"#timeline svg\").height();\r\n\r\n    var timeExtent = d3.extent(points, function(d) {\r\n        return new Date(d.time);\r\n    });\r\n    var x = d3.time.scale()\r\n        .range([0, width])\r\n        .domain(timeExtent);\r\n\r\n    canvas.selectAll(\".point\")\r\n        .data(points)\r\n        .enter()\r\n        .append(\"circle\")\r\n        .attr(\"class\", 'point')\r\n        .attr(\"r\", function(d){\r\n            return d.radius;\r\n        })\r\n        .attr(\"fill\", \"red\")\r\n        .attr(\"opacity\", 0.5)\r\n        .attr(\"stroke\", 'black')\r\n        .attr(\"transform\", function(d){\r\n            return \"translate(\" + x(new Date(d.time)) + ', ' + height/2 + ')';\r\n        });\r\n\r\n    var brush = d3.svg.brush()\r\n        .x(x)\r\n        .on('brushend', brushend);\r\n    canvas.append('g')\r\n        .attr('class', 'x brush')\r\n        .call(brush)\r\n        .selectAll('rect')\r\n        .attr('y', -6)\r\n        .attr('height', height);\r\n    function brushend() {\r\n        var filter;\r\n        // If the user has selected no brush area, share everything.\r\n        if (brush.empty()) {\r\n            filter = function() { return true; }\r\n        } else {\r\n            // Otherwise, restrict features to only things in the brush extent.\r\n            filter = function(feature) {\r\n                return feature.time > +brush.extent()[0] &&\r\n                    feature.time < (+brush.extent()[1]);\r\n            };\r\n        }\r\n        var filtered = points.filter(filter);\r\n        drawToMap(filtered);\r\n    }\r\n\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./static/js/src/timeline/timeline.js\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":""}